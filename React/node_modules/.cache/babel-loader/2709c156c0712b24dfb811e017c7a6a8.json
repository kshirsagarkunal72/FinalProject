{"ast":null,"code":"var _jsxFileName = \"P:\\\\PROJECT\\\\SpringBoot\\\\React\\\\src\\\\Users\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport { Field, useFormik } from \"formik\";\nimport React, { useContext, useState, useEffect } from \"react\";\nimport * as yup from \"yup\";\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Connection from '../components/Services/Connection';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst validationSchema = yup.object({\n  username: yup.string().required(),\n  password: yup.string().required()\n});\n\nfunction SignIn(props) {\n  _s();\n\n  useEffect(() => {\n    document.title = \"Wish-it || SignIn\";\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: \"\",\n      password: \"\"\n    },\n    validateOnBlur: true,\n    validationSchema: validationSchema,\n    onSubmit: SaveUser\n  });\n  let navigate = useNavigate();\n  const [username, SetUsername] = useState('');\n  const [password, SetPassword] = useState('');\n\n  const SaveUser = async e => {\n    e.preventDefault();\n    alert(Json.String);\n    const user = {\n      username,\n      password\n    };\n    Connection.getToken(user).then(response => {\n      console.log(response.data.role);\n      console.log(response.data.token);\n      sessionStorage.setItem(\"JwtToken\", response.data.token);\n\n      if (response.data.role == 'ADMIN') {\n        navigate(\"/adashboard\");\n      }\n\n      if (response.data.role == 'CUSTOMER') {\n        navigate(\"/cdashboard\");\n      }\n\n      if (response.data.role == 'SUPPLIER') {\n        navigate(\"/sdashboard\");\n      }\n    }).catch(error => {\n      console.log(\"Invalid Username or Password\");\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container col-5 mt-5 mb-5\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card text-bg-light p-3 \",\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: formik.handleSubmit,\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"text-center\",\n          children: \"SignIn\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-4\",\n            children: \"Email\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 38\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            placeholder: \"Enter Username\",\n            name: \"username\",\n            value: formik.values.username,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: \"form-control rounded-pill mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 38\n          }, this), formik.errors.username ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: formik.errors.username\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group mb-2\",\n          children: [/*#__PURE__*/_jsxDEV(\"label\", {\n            className: \"form-label mt-4\",\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 37\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"password\",\n            placeholder: \"Enter password\",\n            name: \"password\",\n            value: formik.values.password,\n            onChange: formik.handleChange,\n            onBlur: formik.handleBlur,\n            className: \"form-control rounded-pill mt-2\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 37\n          }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"text-danger\",\n            children: formik.errors.password\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 37\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 34\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-primary mt-4 rounded-pill\",\n            type: \"submit\",\n            children: \"Submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 33\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 32\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"text-center mt-3\",\n        children: /*#__PURE__*/_jsxDEV(\"small\", {\n          children: /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"\",\n            children: \"Forgot Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 66\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 59\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 25\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 2\n  }, this);\n} //  const validateCustomer=(cdata)=>{\n// const errors={}\n// let pattern1 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/\n// let pattern2 = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/\n// if(!cdata.username)\n// errors.username=\"Email_Id is required\"\n//  else if (!pattern1.test(cdata.username))\n//          errors.username = \"Use Correct Pattern for Email!\"\n// if(!cdata.password)\n// errors.password=\"password is required\"\n// else if (!pattern2.test(cdata.username))\n//         errors.username = \"Use Correct Pattern for password!\"\n// return errors\n// }\n\n\n_s(SignIn, \"XElovHoYxQCqspsueEB3k1/5/JE=\", false, function () {\n  return [useFormik, useNavigate];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["Field","useFormik","React","useContext","useState","useEffect","yup","Link","useNavigate","Connection","validationSchema","object","username","string","required","password","SignIn","props","document","title","formik","initialValues","validateOnBlur","onSubmit","SaveUser","navigate","SetUsername","SetPassword","e","preventDefault","alert","Json","String","user","getToken","then","response","console","log","data","role","token","sessionStorage","setItem","catch","error","handleSubmit","values","handleChange","handleBlur","errors"],"sources":["P:/PROJECT/SpringBoot/React/src/Users/SignIn.js"],"sourcesContent":["import { Field, useFormik } from \"formik\";\r\nimport React, { useContext, useState, useEffect } from \"react\";\r\nimport * as yup from \"yup\";\r\n import {  Link, useNavigate } from \"react-router-dom\";\r\n import Connection from '../components/Services/Connection'\r\n\r\nconst validationSchema = yup.object({\r\n  username: yup.string().required(),\r\n  password: yup.string().required(),\r\n\r\n\r\n  \r\n});\r\n\r\nfunction SignIn(props) {\r\n  useEffect(()=>{\r\n            document.title=\"Wish-it || SignIn\"\r\n           })\r\n const formik = useFormik({\r\n            initialValues: { username: \"\", password: \"\" },\r\n            validateOnBlur: true,\r\n            validationSchema: validationSchema,\r\n            onSubmit:SaveUser\r\n          });\r\n  \r\n   let navigate=useNavigate()\r\n   const [username, SetUsername] = useState('')\r\n   const [password, SetPassword] = useState('')\r\n  \r\n   const SaveUser = async (e) => {\r\n     e.preventDefault();\r\n     alert(Json.String)\r\n        const user={username,password}\r\n        Connection.getToken(user).then((response)=>{\r\n          console.log(response.data.role);    \r\n          console.log(response.data.token);\r\n          sessionStorage.setItem(\"JwtToken\",response.data.token)  \r\n        if(response.data.role=='ADMIN')\r\n        {\r\n          navigate(\"/adashboard\")\r\n        }\r\n        if(response.data.role=='CUSTOMER')\r\n        {\r\n          navigate(\"/cdashboard\")\r\n        }\r\n        if(response.data.role=='SUPPLIER')\r\n        {\r\n          navigate(\"/sdashboard\")\r\n        }\r\n   } ).catch(error =>{console.log(\"Invalid Username or Password\")})\r\n    \r\n    \r\n  };\r\n\r\n \r\n\r\n  return (\r\n  \r\n <div className=\"container col-5 mt-5 mb-5\">\r\n          \r\n             \r\n                      <div className='card text-bg-light p-3 '>\r\n                             <form \r\n                             onSubmit={formik.handleSubmit} \r\n                             >\r\n                             <h3 className='text-center'>SignIn</h3>\r\n                                 <div className=\"form-group mb-2\">\r\n                                     <label className=\"form-label mt-4\">Email</label>\r\n                                     <input type=\"text\" \r\n                                    placeholder=\"Enter Username\" \r\n                                    name=\"username\" \r\n                                    value={formik.values.username}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    className=\"form-control rounded-pill mt-2\" \r\n                                    ></input>\r\n                                    {formik.errors.username ? \r\n                                    <span className=\"text-danger\">\r\n                                    {formik.errors.username}</span> : null}\r\n          \r\n                                </div>\r\n                                 <div className=\"form-group mb-2\">\r\n                                    <label className=\"form-label mt-4\">Password</label>\r\n                                    <input type=\"password\" placeholder=\"Enter password\"\r\n                                     name=\"password\" \r\n                                     value={formik.values.password}\r\n                                     onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    className=\"form-control rounded-pill mt-2\" ></input>\r\n                                    {formik.errors.password ? \r\n                                    <span className=\"text-danger\">\r\n                                    {formik.errors.password}</span> : null}\r\n          \r\n                                </div>\r\n                               <div className='d-grid gap-2'>\r\n                                <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n                                type=\"submit\"\r\n                               \r\n                                >Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        \r\n                        <div className='text-center mt-3'><small><a href=''>\r\n                          Forgot Password</a></small>\r\n                        </div>\r\n                   \r\n                </div>\r\n                </div>\r\n          \r\n     \r\n  );\r\n}\r\n\r\n\r\n//  const validateCustomer=(cdata)=>{\r\n// const errors={}\r\n// let pattern1 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/\r\n// let pattern2 = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n// if(!cdata.username)\r\n// errors.username=\"Email_Id is required\"\r\n//  else if (!pattern1.test(cdata.username))\r\n//          errors.username = \"Use Correct Pattern for Email!\"\r\n\r\n\r\n\r\n// if(!cdata.password)\r\n// errors.password=\"password is required\"\r\n// else if (!pattern2.test(cdata.username))\r\n//         errors.username = \"Use Correct Pattern for password!\"\r\n\r\n\r\n// return errors\r\n\r\n// }\r\n\r\n\r\n export default SignIn\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,SAASA,KAAT,EAAgBC,SAAhB,QAAiC,QAAjC;AACA,OAAOC,KAAP,IAAgBC,UAAhB,EAA4BC,QAA5B,EAAsCC,SAAtC,QAAuD,OAAvD;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACC,SAAUC,IAAV,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;;AAED,MAAMC,gBAAgB,GAAGJ,GAAG,CAACK,MAAJ,CAAW;EAClCC,QAAQ,EAAEN,GAAG,CAACO,MAAJ,GAAaC,QAAb,EADwB;EAElCC,QAAQ,EAAET,GAAG,CAACO,MAAJ,GAAaC,QAAb;AAFwB,CAAX,CAAzB;;AAQA,SAASE,MAAT,CAAgBC,KAAhB,EAAuB;EAAA;;EACrBZ,SAAS,CAAC,MAAI;IACJa,QAAQ,CAACC,KAAT,GAAe,mBAAf;EACA,CAFD,CAAT;EAGD,MAAMC,MAAM,GAAGnB,SAAS,CAAC;IACdoB,aAAa,EAAE;MAAET,QAAQ,EAAE,EAAZ;MAAgBG,QAAQ,EAAE;IAA1B,CADD;IAEdO,cAAc,EAAE,IAFF;IAGdZ,gBAAgB,EAAEA,gBAHJ;IAIda,QAAQ,EAACC;EAJK,CAAD,CAAxB;EAOE,IAAIC,QAAQ,GAACjB,WAAW,EAAxB;EACA,MAAM,CAACI,QAAD,EAAWc,WAAX,IAA0BtB,QAAQ,CAAC,EAAD,CAAxC;EACA,MAAM,CAACW,QAAD,EAAWY,WAAX,IAA0BvB,QAAQ,CAAC,EAAD,CAAxC;;EAEA,MAAMoB,QAAQ,GAAG,MAAOI,CAAP,IAAa;IAC5BA,CAAC,CAACC,cAAF;IACAC,KAAK,CAACC,IAAI,CAACC,MAAN,CAAL;IACG,MAAMC,IAAI,GAAC;MAACrB,QAAD;MAAUG;IAAV,CAAX;IACAN,UAAU,CAACyB,QAAX,CAAoBD,IAApB,EAA0BE,IAA1B,CAAgCC,QAAD,IAAY;MACzCC,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcC,IAA1B;MACAH,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAAT,CAAcE,KAA1B;MACAC,cAAc,CAACC,OAAf,CAAuB,UAAvB,EAAkCP,QAAQ,CAACG,IAAT,CAAcE,KAAhD;;MACF,IAAGL,QAAQ,CAACG,IAAT,CAAcC,IAAd,IAAoB,OAAvB,EACA;QACEf,QAAQ,CAAC,aAAD,CAAR;MACD;;MACD,IAAGW,QAAQ,CAACG,IAAT,CAAcC,IAAd,IAAoB,UAAvB,EACA;QACEf,QAAQ,CAAC,aAAD,CAAR;MACD;;MACD,IAAGW,QAAQ,CAACG,IAAT,CAAcC,IAAd,IAAoB,UAAvB,EACA;QACEf,QAAQ,CAAC,aAAD,CAAR;MACD;IACL,CAhBI,EAgBDmB,KAhBC,CAgBKC,KAAK,IAAG;MAACR,OAAO,CAACC,GAAR,CAAY,8BAAZ;IAA4C,CAhB1D;EAmBL,CAvBA;;EA2BD,oBAED;IAAK,SAAS,EAAC,2BAAf;IAAA,uBAGqB;MAAK,SAAS,EAAC,yBAAf;MAAA,wBACO;QACA,QAAQ,EAAElB,MAAM,CAAC0B,YADjB;QAAA,wBAGA;UAAI,SAAS,EAAC,aAAd;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAHA,eAII;UAAK,SAAS,EAAC,iBAAf;UAAA,wBACI;YAAO,SAAS,EAAC,iBAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAO,IAAI,EAAC,MAAZ;YACD,WAAW,EAAC,gBADX;YAED,IAAI,EAAC,UAFJ;YAGD,KAAK,EAAE1B,MAAM,CAAC2B,MAAP,CAAcnC,QAHpB;YAID,QAAQ,EAAEQ,MAAM,CAAC4B,YAJhB;YAKD,MAAM,EAAE5B,MAAM,CAAC6B,UALd;YAMD,SAAS,EAAC;UANT;YAAA;YAAA;YAAA;UAAA,QAFJ,EAUI7B,MAAM,CAAC8B,MAAP,CAActC,QAAd,gBACD;YAAM,SAAS,EAAC,aAAhB;YAAA,UACCQ,MAAM,CAAC8B,MAAP,CAActC;UADf;YAAA;YAAA;YAAA;UAAA,QADC,GAEiC,IAZrC;QAAA;UAAA;UAAA;UAAA;QAAA,QAJJ,eAmBI;UAAK,SAAS,EAAC,iBAAf;UAAA,wBACG;YAAO,SAAS,EAAC,iBAAjB;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADH,eAEG;YAAO,IAAI,EAAC,UAAZ;YAAuB,WAAW,EAAC,gBAAnC;YACC,IAAI,EAAC,UADN;YAEC,KAAK,EAAEQ,MAAM,CAAC2B,MAAP,CAAchC,QAFtB;YAGC,QAAQ,EAAEK,MAAM,CAAC4B,YAHlB;YAIA,MAAM,EAAE5B,MAAM,CAAC6B,UAJf;YAKA,SAAS,EAAC;UALV;YAAA;YAAA;YAAA;UAAA,QAFH,EAQI7B,MAAM,CAAC8B,MAAP,CAAcnC,QAAd,gBACD;YAAM,SAAS,EAAC,aAAhB;YAAA,UACCK,MAAM,CAAC8B,MAAP,CAAcnC;UADf;YAAA;YAAA;YAAA;UAAA,QADC,GAEiC,IAVrC;QAAA;UAAA;UAAA;UAAA;QAAA,QAnBJ,eAgCE;UAAK,SAAS,EAAC,cAAf;UAAA,uBACC;YAAQ,SAAS,EAAC,mCAAlB;YACA,IAAI,EAAC,QADL;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QADD;UAAA;UAAA;UAAA;QAAA,QAhCF;MAAA;QAAA;QAAA;QAAA;MAAA,QADP,eAyCE;QAAK,SAAS,EAAC,kBAAf;QAAA,uBAAkC;UAAA,uBAAO;YAAG,IAAI,EAAC,EAAR;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA;QAAP;UAAA;UAAA;UAAA;QAAA;MAAlC;QAAA;QAAA;QAAA;MAAA,QAzCF;IAAA;MAAA;MAAA;MAAA;IAAA;EAHrB;IAAA;IAAA;IAAA;EAAA,QAFC;AAuDD,C,CAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AACA;AACA;AACA;AAGA;AAEA;;;GAvHSC,M;UAIOf,S,EAOAO,W;;;KAXPQ,M;AA0HR,eAAeA,MAAf"},"metadata":{},"sourceType":"module"}