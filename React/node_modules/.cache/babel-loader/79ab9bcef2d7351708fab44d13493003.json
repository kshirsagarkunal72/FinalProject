{"ast":null,"code":"var _jsxFileName = \"D:\\\\CDAC_Final_Project\\\\React\\\\src\\\\components\\\\Shared\\\\MailchimpForm.js\";\nimport MailchimpSubscribe from \"react-mailchimp-subscribe\";\nimport { Newsletter } from \"../../Newsletter\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const MailchimpForm = () => {\n  const postUrl = `${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}$id=${process.env.REACT_APP_MAILCHIMP_ID}`;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(MailchimpSubscribe, {\n      url: postUrl,\n      render: _ref => {\n        let {\n          subscribe,\n          status,\n          message\n        } = _ref;\n        return /*#__PURE__*/_jsxDEV(Newsletter, {\n          status: status,\n          message: message,\n          onValidated: FormData => subscribe(FormData)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 12,\n          columnNumber: 9\n        }, this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n};\n_c = MailchimpForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"MailchimpForm\");","map":{"version":3,"names":["MailchimpSubscribe","Newsletter","MailchimpForm","postUrl","process","env","REACT_APP_MAILCHIMP_URL","REACT_APP_MAILCHIMP_U","REACT_APP_MAILCHIMP_ID","subscribe","status","message","FormData"],"sources":["D:/CDAC_Final_Project/React/src/components/Shared/MailchimpForm.js"],"sourcesContent":["import MailchimpSubscribe from \"react-mailchimp-subscribe\";\r\nimport { Newsletter } from \"../../Newsletter\";\r\n\r\nexport const MailchimpForm=()=>{\r\n    const postUrl=`${process.env.REACT_APP_MAILCHIMP_URL}?u=${process.env.REACT_APP_MAILCHIMP_U}$id=${process.env.REACT_APP_MAILCHIMP_ID}`\r\n\r\n    return (\r\n        <>\r\n        <MailchimpSubscribe\r\n        url={postUrl}\r\n        render={({subscribe, status, message})=>(\r\n        <Newsletter \r\n        status={status}\r\n        message={message}\r\n        onValidated={FormData=> subscribe(FormData)}\r\n        />\r\n        )}\r\n        />\r\n        </>\r\n    )\r\n}"],"mappings":";AAAA,OAAOA,kBAAP,MAA+B,2BAA/B;AACA,SAASC,UAAT,QAA2B,kBAA3B;;;AAEA,OAAO,MAAMC,aAAa,GAAC,MAAI;EAC3B,MAAMC,OAAO,GAAE,GAAEC,OAAO,CAACC,GAAR,CAAYC,uBAAwB,MAAKF,OAAO,CAACC,GAAR,CAAYE,qBAAsB,OAAMH,OAAO,CAACC,GAAR,CAAYG,sBAAuB,EAArI;EAEA,oBACI;IAAA,uBACA,QAAC,kBAAD;MACA,GAAG,EAAEL,OADL;MAEA,MAAM,EAAE;QAAA,IAAC;UAACM,SAAD;UAAYC,MAAZ;UAAoBC;QAApB,CAAD;QAAA,oBACR,QAAC,UAAD;UACA,MAAM,EAAED,MADR;UAEA,OAAO,EAAEC,OAFT;UAGA,WAAW,EAAEC,QAAQ,IAAGH,SAAS,CAACG,QAAD;QAHjC;UAAA;UAAA;UAAA;QAAA,QADQ;MAAA;IAFR;MAAA;MAAA;MAAA;IAAA;EADA,iBADJ;AAcH,CAjBM;KAAMV,a"},"metadata":{},"sourceType":"module"}