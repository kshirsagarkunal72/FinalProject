{"ast":null,"code":"var _jsxFileName = \"P:\\\\PROJECT\\\\SpringBoot\\\\React\\\\src\\\\Users\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst SignupForm = () => {\n  _s();\n\n  const formik = useFormik({\n    initialValues: {\n      firstName: '',\n      lastName: '',\n      email: ''\n    },\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: formik.handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"firstName\",\n      children: \"First Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"firstName\",\n      name: \"firstName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.firstName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"lastName\",\n      children: \"Last Name\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"lastName\",\n      name: \"lastName\",\n      type: \"text\",\n      onChange: formik.handleChange,\n      value: formik.values.lastName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: \"email\",\n      children: \"Email Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      id: \"email\",\n      name: \"email\",\n      type: \"email\",\n      onChange: formik.handleChange,\n      value: formik.values.email\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      children: \"Submit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 6\n  }, this);\n}; // import { useFormik } from 'formik';\n// import React, { useEffect , useState } from 'react'\n// import {  Link, useNavigate } from \"react-router-dom\";\n// import Connection from '../components/Services/Connection' \n// const validateCustomer=(cdata)=>{\n// const errors={}\n// let pattern1 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/\n// let pattern2 = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/\n// if(!cdata.username)\n// errors.username=\"Email_Id is required\"\n//  else if (!pattern1.test(cdata.username))\n//          errors.username = \"Use Correct Pattern for Email!\"\n// if(!cdata.password)\n// errors.password=\"password is required\"\n// else if (!pattern2.test(cdata.username))\n//         errors.username = \"Use Correct Pattern for password!\"\n// return errors\n// }\n// const SignIn = () => {\n//   /////////////\n//   useEffect(()=>{\n//     document.title=\"Wish-it || SignIn\"\n//   })\n// ////////////\n//   let navigate=useNavigate()\n//   const [username, SetUsername] = useState('')\n//   const [password, SetPassword] = useState('')\n//   const SaveUser=(e)=>{\n//     e.preventDefault();\n//     const user={username,password}\n//     Connection.getToken(user).then((response)=>{\n//       console.log(response.data.role);    \n//       console.log(response.data.token);\n//       sessionStorage.setItem(\"JwtToken\",response.data.token)  \n//     if(response.data.role=='ADMIN')\n//     {\n//       navigate(\"/adashboard\")\n//     }\n//     if(response.data.role=='CUSTOMER')\n//     {\n//       navigate(\"/cdashboard\")\n//     }\n//     if(response.data.role=='SUPPLIER')\n//     {\n//       navigate(\"/sdashboard\")\n//     }\n//   } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\n//   const formik=useFormik({\n// initialValues:{username:'',password:''},\n// validate:validateCustomer,\n// onSubmit: values => {\n//  console.log(JSON.stringify(values, null, 2));\n// }\n// })\n//   return (\n//     <>\n// <div className=\"container col-5 mt-5 mb-5\">\n//              <div className='card text-bg-light p-3 '>\n//                   <form onSubmit={formik.handleSubmit}>\n//                   <h3 className='text-center'>SignIn</h3>\n//                       <div className=\"form-group mb-2\">\n//                           <label className=\"form-label mt-4\">Email</label>\n//                           <input type=\"text\" \n//                           placeholder=\"Enter Username\" \n//                           name=\"username\" \n//                           value={formik.values.username}\n//                           onChange={formik.handleChange}\n//                           onBlur={formik.handleBlur}\n//                           className=\"form-control rounded-pill mt-2\" \n//                           ></input>\n//                           {formik.errors.username ? \n//                           <span className=\"text-danger\">\n//                           {formik.errors.username}</span> : null}\n//                       </div>\n//                       <div className=\"form-group mb-2\">\n//                           <label className=\"form-label mt-4\">Password</label>\n//                           <input type=\"password\" placeholder=\"Enter password\"\n//                            name=\"password\" \n//                            value={formik.values.password}\n//                            onChange={formik.handleChange}\n//                           onBlur={formik.handleBlur}\n//                           className=\"form-control rounded-pill mt-2\" ></input>\n//                           {formik.errors.password ? \n//                           <span className=\"text-danger\">\n//                           {formik.errors.password}</span> : null}\n//                       </div>\n//                      <div className='d-grid gap-2'>\n//                       <button className=\"btn btn-primary mt-4 rounded-pill\" \n//                       type=\"submit\">Submit</button>\n//                       </div>\n//                   </form>\n//               <div className='text-center mt-3'><small><a href=''>\n//                 Forgot Password</a></small>\n//               </div>\n//       </div>\n//       </div>\n//     </>\n//   )\n// }\n// export default SignIn\n\n\n_s(SignupForm, \"B/4rI4IXClQ7sG7psKj+pOuRe5Q=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignupForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignupForm\");","map":{"version":3,"names":["React","useFormik","SignupForm","formik","initialValues","firstName","lastName","email","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange"],"sources":["P:/PROJECT/SpringBoot/React/src/Users/SignIn.js"],"sourcesContent":["import React from 'react';\r\n import { useFormik } from 'formik';\r\n \r\n const SignupForm = () => {\r\n   const formik = useFormik({\r\n     initialValues: {\r\n       firstName: '',\r\n       lastName: '',\r\n       email: '',\r\n     },\r\n     onSubmit: values => {\r\n       alert(JSON.stringify(values, null, 2));\r\n     },\r\n   });\r\n   return (\r\n     <form onSubmit={formik.handleSubmit}>\r\n       <label htmlFor=\"firstName\">First Name</label>\r\n       <input\r\n         id=\"firstName\"\r\n         name=\"firstName\"\r\n         type=\"text\"\r\n         onChange={formik.handleChange}\r\n         value={formik.values.firstName}\r\n       />\r\n       <label htmlFor=\"lastName\">Last Name</label>\r\n       <input\r\n         id=\"lastName\"\r\n         name=\"lastName\"\r\n         type=\"text\"\r\n         onChange={formik.handleChange}\r\n         value={formik.values.lastName}\r\n       />\r\n       <label htmlFor=\"email\">Email Address</label>\r\n       <input\r\n         id=\"email\"\r\n         name=\"email\"\r\n         type=\"email\"\r\n         onChange={formik.handleChange}\r\n         value={formik.values.email}\r\n       />\r\n       <button type=\"submit\">Submit</button>\r\n     </form>\r\n   );\r\n };\r\n\r\n\r\n\r\n// import { useFormik } from 'formik';\r\n// import React, { useEffect , useState } from 'react'\r\n// import {  Link, useNavigate } from \"react-router-dom\";\r\n// import Connection from '../components/Services/Connection' \r\n \r\n// const validateCustomer=(cdata)=>{\r\n// const errors={}\r\n// let pattern1 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/\r\n// let pattern2 = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\n// if(!cdata.username)\r\n// errors.username=\"Email_Id is required\"\r\n//  else if (!pattern1.test(cdata.username))\r\n//          errors.username = \"Use Correct Pattern for Email!\"\r\n\r\n\r\n// if(!cdata.password)\r\n// errors.password=\"password is required\"\r\n// else if (!pattern2.test(cdata.username))\r\n//         errors.username = \"Use Correct Pattern for password!\"\r\n\r\n// return errors\r\n\r\n// }\r\n\r\n\r\n// const SignIn = () => {\r\n//   /////////////\r\n//   useEffect(()=>{\r\n//     document.title=\"Wish-it || SignIn\"\r\n//   })\r\n// ////////////\r\n//   let navigate=useNavigate()\r\n//   const [username, SetUsername] = useState('')\r\n//   const [password, SetPassword] = useState('')\r\n \r\n\r\n//   const SaveUser=(e)=>{\r\n//     e.preventDefault();\r\n//     const user={username,password}\r\n//     Connection.getToken(user).then((response)=>{\r\n//       console.log(response.data.role);    \r\n//       console.log(response.data.token);\r\n//       sessionStorage.setItem(\"JwtToken\",response.data.token)  \r\n//     if(response.data.role=='ADMIN')\r\n//     {\r\n//       navigate(\"/adashboard\")\r\n//     }\r\n//     if(response.data.role=='CUSTOMER')\r\n//     {\r\n//       navigate(\"/cdashboard\")\r\n//     }\r\n//     if(response.data.role=='SUPPLIER')\r\n//     {\r\n//       navigate(\"/sdashboard\")\r\n//     }\r\n\r\n            \r\n    \r\n//   } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\r\n \r\n//   const formik=useFormik({\r\n// initialValues:{username:'',password:''},\r\n// validate:validateCustomer,\r\n// onSubmit: values => {\r\n//  console.log(JSON.stringify(values, null, 2));\r\n// }\r\n// })\r\n\r\n\r\n//   return (\r\n//     <>\r\n\r\n\r\n\r\n// <div className=\"container col-5 mt-5 mb-5\">\r\n          \r\n             \r\n//              <div className='card text-bg-light p-3 '>\r\n//                   <form onSubmit={formik.handleSubmit}>\r\n//                   <h3 className='text-center'>SignIn</h3>\r\n//                       <div className=\"form-group mb-2\">\r\n//                           <label className=\"form-label mt-4\">Email</label>\r\n//                           <input type=\"text\" \r\n//                           placeholder=\"Enter Username\" \r\n//                           name=\"username\" \r\n//                           value={formik.values.username}\r\n//                           onChange={formik.handleChange}\r\n//                           onBlur={formik.handleBlur}\r\n//                           className=\"form-control rounded-pill mt-2\" \r\n//                           ></input>\r\n//                           {formik.errors.username ? \r\n//                           <span className=\"text-danger\">\r\n//                           {formik.errors.username}</span> : null}\r\n\r\n//                       </div>\r\n//                       <div className=\"form-group mb-2\">\r\n//                           <label className=\"form-label mt-4\">Password</label>\r\n//                           <input type=\"password\" placeholder=\"Enter password\"\r\n//                            name=\"password\" \r\n//                            value={formik.values.password}\r\n//                            onChange={formik.handleChange}\r\n//                           onBlur={formik.handleBlur}\r\n//                           className=\"form-control rounded-pill mt-2\" ></input>\r\n//                           {formik.errors.password ? \r\n//                           <span className=\"text-danger\">\r\n//                           {formik.errors.password}</span> : null}\r\n\r\n//                       </div>\r\n//                      <div className='d-grid gap-2'>\r\n//                       <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n//                       type=\"submit\">Submit</button>\r\n//                       </div>\r\n//                   </form>\r\n              \r\n//               <div className='text-center mt-3'><small><a href=''>\r\n//                 Forgot Password</a></small>\r\n//               </div>\r\n         \r\n//       </div>\r\n//       </div>\r\n\r\n\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default SignIn\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACC,SAASC,SAAT,QAA0B,QAA1B;;;AAEA,MAAMC,UAAU,GAAG,MAAM;EAAA;;EACvB,MAAMC,MAAM,GAAGF,SAAS,CAAC;IACvBG,aAAa,EAAE;MACbC,SAAS,EAAE,EADE;MAEbC,QAAQ,EAAE,EAFG;MAGbC,KAAK,EAAE;IAHM,CADQ;IAMvBC,QAAQ,EAAEC,MAAM,IAAI;MAClBC,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeH,MAAf,EAAuB,IAAvB,EAA6B,CAA7B,CAAD,CAAL;IACD;EARsB,CAAD,CAAxB;EAUA,oBACE;IAAM,QAAQ,EAAEN,MAAM,CAACU,YAAvB;IAAA,wBACE;MAAO,OAAO,EAAC,WAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MACE,EAAE,EAAC,WADL;MAEE,IAAI,EAAC,WAFP;MAGE,IAAI,EAAC,MAHP;MAIE,QAAQ,EAAEV,MAAM,CAACW,YAJnB;MAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcJ;IALvB;MAAA;MAAA;MAAA;IAAA,QAFF,eASE;MAAO,OAAO,EAAC,UAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAUE;MACE,EAAE,EAAC,UADL;MAEE,IAAI,EAAC,UAFP;MAGE,IAAI,EAAC,MAHP;MAIE,QAAQ,EAAEF,MAAM,CAACW,YAJnB;MAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcH;IALvB;MAAA;MAAA;MAAA;IAAA,QAVF,eAiBE;MAAO,OAAO,EAAC,OAAf;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBF,eAkBE;MACE,EAAE,EAAC,OADL;MAEE,IAAI,EAAC,OAFP;MAGE,IAAI,EAAC,OAHP;MAIE,QAAQ,EAAEH,MAAM,CAACW,YAJnB;MAKE,KAAK,EAAEX,MAAM,CAACM,MAAP,CAAcF;IALvB;MAAA;MAAA;MAAA;IAAA,QAlBF,eAyBE;MAAQ,IAAI,EAAC,QAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAzBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AA6BD,CAxCD,C,CA4CD;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAEA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AAIA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAGA;AACA;AACA;AAEA;;;GA1KOL,U;UACWD,S;;;KADXC,U"},"metadata":{},"sourceType":"module"}