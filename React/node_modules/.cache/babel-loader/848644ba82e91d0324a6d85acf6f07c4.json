{"ast":null,"code":"var _jsxFileName = \"P:\\\\PROJECT\\\\SpringBoot\\\\React\\\\src\\\\Users\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Connection from '../components/Services/Connection';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst validateCustomer = custData => {\n  const errors = {};\n  let pattern1 = /^([a-zA-Z ]+)$/;\n  let pattern2 = /^([1-9]{1}[0-9]{5}|[1-9]{1}[0-9]{3}\\\\s[0-9]{3})$/;\n  let pattern3 = /^([0-9]{12})$/;\n  let pattern4 = /^([0-9]{10})$/;\n  let pattern5 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/;\n  if (!custData.name) errors.name = \"Name is Required!\";else if (!pattern1.test(custData.name)) errors.name = \"Alphabets Only\";\n  if (!custData.address) errors.address = \"Address is Required!\";\n  if (custData.pincode.length == 0) errors.pincode = \"PinCode required!\";else if (!pattern2.test(custData.pincode)) errors.pincode = \"Numbers upto 6-Digits Only1\";\n  if (!custData.dob) errors.dob = 'Date Of Birth Required!';\n  if (custData.aadhaar.length == 0) errors.aadhaar = \"Adhard Number required\";else if (!pattern3.test(custData.aadhaar)) errors.aadhaar = \"Numbers upto 12-Digits Only!\";\n  if (custData.mobile.length == 0) errors.mobile = \"Mobile Number required!\";else if (!pattern4.test(custData.mobile)) errors.mobile = \"Numbers upto 10-Digits Only!\";\n  if (custData.username.length == 0) errors.username = \"Email required!\";else if (!pattern5.test(custData.username)) errors.username = \"Use Correct Pattern for Email!\";\n  return errors;\n};\n\nconst SignUp = () => {\n  _s();\n\n  let navigate = useNavigate();\n  const [name, SetName] = useState('');\n  const [address, SetAddress] = useState('');\n  const [pincode, SetPincode] = useState('');\n  const [dob, SetDob] = useState('');\n  const [aadhaar, SetAadhaar] = useState('');\n  const [mobile, SetMobile] = useState('');\n  const [password, SetPassword] = useState('');\n  const [username, SetUsername] = useState('');\n\n  const SaveUser = e => {\n    e.preventDefault();\n    const customer = {\n      name,\n      address,\n      pincode,\n      dob,\n      aadhaar,\n      mobile,\n      username\n    };\n    Connection.saveCustomer(customer).then(response => {\n      if (response.data.userid != 0) {\n        const tok = response.data.token;\n        navigate('/verify', {\n          state: {\n            token: tok\n          }\n        });\n      }\n    }).catch(error => {\n      navigate(\"/\");\n    });\n  };\n\n  const formik = useFormik({\n    initialValues: {\n      name: '',\n      address: '',\n      pincode: '',\n      dob: '',\n      aadhaar: '',\n      mobile: '',\n      username: ''\n    },\n    validate: validateCustomer,\n    onSubmit: values => {\n      alert(JSON.stringify(values));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container col-8 mt-5 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-bg-light p-3 \",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"Customer SignUp Form\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Full Name\",\n              name: \"name\",\n              value: formik.values.name,\n              onSubmit: e => SetName(e.target.value),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 109,\n              columnNumber: 27\n            }, this), formik.errors.name ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 27\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Address\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Address\",\n              name: \"address\",\n              value: formik.values.address,\n              onSubmit: e => SetAddress(e.target.value),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 27\n            }, this), formik.errors.address ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 52\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"PinCode\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"PinCode\",\n              name: \"pincode\",\n              value: formik.values.pincode,\n              onSubmit: e => SetPincode(e.target.value),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 27\n            }, this), formik.errors.pincode ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.pincode\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 69\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Date Of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              placeholder: \"Enter DOB\",\n              name: \"dob\",\n              value: formik.values.dob,\n              onSubmit: e => SetDob(e.target.value),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 27\n            }, this), formik.errors.dob ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.dob\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 48\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Aadhaar Number\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Aadhaar No.\",\n              name: \"aadhaar\",\n              value: formik.values.aadhaar,\n              onSubmit: e => SetAadhaar(e.target.value),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 27\n            }, this), formik.errors.aadhaar ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.aadhaar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 69\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Mobile No.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              placeholder: \"Enter Mobile\",\n              name: \"mobile\",\n              value: formik.values.mobile,\n              onSubmit: e => SetMobile(e.target.value),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 178,\n              columnNumber: 27\n            }, this), formik.errors.mobile ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.mobile\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 51\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"Email\",\n              placeholder: \"This will be your Username\",\n              name: \"username\",\n              value: formik.values.username,\n              onSubmit: e => SetUsername(e.target.value),\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\",\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"small\",\n              children: \"OTP will be sent on this email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 27\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 90\n            }, this), formik.errors.username ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 53\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 23\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mt-4 rounded-pill\",\n              onClick: e => SaveUser(e),\n              children: \"Get OTP\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 23\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 14\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"d-grid gap-2\",\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-success mt-4 rounded-pill\",\n            children: \"SignIn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 229,\n            columnNumber: 23\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 14\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_s(SignUp, \"K2NpBqLJn9DiaN7osMia6DUrgts=\", false, function () {\n  return [useNavigate, useFormik];\n});\n\n_c = SignUp;\nexport default SignUp; // import React, { useEffect , useState } from 'react'\n// import {  Link, useNavigate } from \"react-router-dom\";\n// import Connection from '../components/Services/Connection' \n// const SignIn = () => {\n//   let navigate=useNavigate()\n//   const [username, SetUsername] = useState('')\n//   const [password, SetPassword] = useState('')\n//   const Login=(e)=>{\n//     e.preventDefault();\n//     const user={username,password}\n//     Connection.getToken(user).then((response)=>{\n//       console.log(response.data.role);    \n//       console.log(response.data.token);\n//       sessionStorage.setItem(\"JwtToken\",response.data.token)  \n//     if(response.data.role=='ADMIN')\n//     {\n//       navigate(\"/adashboard\")\n//     }\n//     if(response.data.role=='CUSTOMER')\n//     {\n//       navigate(\"/dashboardc\")\n//     }\n//     if(response.data.role=='SUPPLIER')\n//     {\n//       navigate(\"/sdashboard\")\n//     }\n//   } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\n//  const Forgot=(e)=>{\n//   e.preventDefault();\n//   const user={username,password}\n//   //validate that username is provided\n//   Connection.forgotPass(user).then((response)=>{\n//     if(response.data.userid!=0)\n//         {\n//        const tok= response.data.token;\n//         navigate('/verify',\n//         {\n//             state: {\n//                 token: tok,\n//                  }\n//         });  }\n//   }).catch(error=>{console.log(\"Invalid Username or Password\")})\n//  }\n//   return (\n//     <>\n// <div className=\"container col-5 mt-5 mb-5\">\n//              <div className='card text-bg-light p-3 '>\n//                   <form>\n//                   <h3 className='text-center'>SignIn</h3>\n//                       <div className=\"form-group mb-2\">\n//                           <label className=\"form-label mt-4\">Email</label>\n//                           <input type=\"text\" \n//                           placeholder=\"Enter Username\" \n//                           name=\"username\" \n//                           value={username}\n//                           onChange={(e)=>SetUsername(e.target.value)}\n//                           className=\"form-control rounded-pill mt-2\" \n//                           ></input>\n//                       </div>\n//                       <div className=\"form-group mb-2\">\n//                           <label className=\"form-label mt-4\">Password</label>\n//                           <input type=\"password\" placeholder=\"Enter password\"\n//                            name=\"password\" \n//                            value={password}\n//                           onChange={(e)=>SetPassword(e.target.value)}\n//                           className=\"form-control rounded-pill mt-2\" ></input>\n//                       </div>\n//                      <div className='d-grid gap-2'>\n//                       <button className=\"btn btn-primary mt-4 rounded-pill\" \n//                       onClick={(e)=>Login(e)}>Submit</button>\n//                       </div>\n//                   </form>\n//               <div className='text-center mt-3'><small><a href='' onClick={(e)=>Forgot(e)}>\n//                 Forgot Password</a></small>\n//               </div>\n//       </div>\n//       </div>\n//     </>\n//   )\n// }\n// export default SignIn\n\nvar _c;\n\n$RefreshReg$(_c, \"SignUp\");","map":{"version":3,"names":["React","useEffect","useState","Link","useNavigate","Connection","useFormik","validateCustomer","custData","errors","pattern1","pattern2","pattern3","pattern4","pattern5","name","test","address","pincode","length","dob","aadhaar","mobile","username","SignUp","navigate","SetName","SetAddress","SetPincode","SetDob","SetAadhaar","SetMobile","password","SetPassword","SetUsername","SaveUser","e","preventDefault","customer","saveCustomer","then","response","data","userid","tok","token","state","catch","error","formik","initialValues","validate","onSubmit","values","alert","JSON","stringify","handleSubmit","target","value","handleChange","handleBlur"],"sources":["P:/PROJECT/SpringBoot/React/src/Users/SignIn.js"],"sourcesContent":["import React, { useEffect , useState } from 'react'\r\nimport {  Link, useNavigate } from \"react-router-dom\";\r\nimport Connection from '../components/Services/Connection' \r\nimport { useFormik } from 'formik'\r\n\r\nconst validateCustomer = (custData) => {\r\n    const errors = {}\r\n    let pattern1 = /^([a-zA-Z ]+)$/\r\n    let pattern2 = /^([1-9]{1}[0-9]{5}|[1-9]{1}[0-9]{3}\\\\s[0-9]{3})$/\r\n    let pattern3=/^([0-9]{12})$/\r\n    let pattern4=/^([0-9]{10})$/\r\n    let pattern5 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/\r\n\r\n    if (!custData.name)\r\n        errors.name = \"Name is Required!\"\r\n    else if (!pattern1.test(custData.name))\r\n        errors.name = \"Alphabets Only\"\r\n\r\n    if (!custData.address)\r\n    errors.address = \"Address is Required!\"\r\n\r\n    if (custData.pincode.length == 0)\r\n        errors.pincode = \"PinCode required!\"\r\n    else if (!pattern2.test(custData.pincode))\r\n        errors.pincode = \"Numbers upto 6-Digits Only1\"\r\n    \r\n    if(!custData.dob)\r\n    errors.dob='Date Of Birth Required!'\r\n\r\n    if (custData.aadhaar.length == 0)\r\n        errors.aadhaar = \"Adhard Number required\"\r\n    else if (!pattern3.test(custData.aadhaar))\r\n        errors.aadhaar = \"Numbers upto 12-Digits Only!\"\r\n\r\n    if (custData.mobile.length == 0)\r\n        errors.mobile = \"Mobile Number required!\"\r\n    else if (!pattern4.test(custData.mobile))\r\n        errors.mobile = \"Numbers upto 10-Digits Only!\"\r\n\r\n    if (custData.username.length == 0)\r\n        errors.username = \"Email required!\"\r\n    else if (!pattern5.test(custData.username))\r\n        errors.username = \"Use Correct Pattern for Email!\"\r\n\r\n    return errors\r\n}\r\n \r\nconst SignUp = () => {\r\n\r\n    let navigate=useNavigate()\r\n    const [name, SetName] = useState('')\r\n    const [address, SetAddress] = useState('')\r\n    const [pincode, SetPincode] = useState('')\r\n    const [dob, SetDob] = useState('')\r\n    const [aadhaar, SetAadhaar] = useState('')\r\n    const [mobile, SetMobile] = useState('')   \r\n    const [password, SetPassword] = useState('')\r\n    const [username, SetUsername] = useState('')\r\n   \r\n\r\n\r\n\r\n\r\n    const SaveUser=(e)=>{\r\n        e.preventDefault();\r\n        const customer={name,address,pincode,dob,aadhaar,mobile,username}\r\n        Connection.saveCustomer(customer).then((response)=>{         \r\n        if(response.data.userid!=0)\r\n        {\r\n       \r\n       const tok= response.data.token;\r\n        navigate('/verify',\r\n        {\r\n            state: {\r\n                token: tok,\r\n                 }\r\n        });\r\n        } \r\n            \r\n      } ).catch(error =>{navigate(\"/\")})}\r\n\r\n      const formik = useFormik({\r\n        initialValues:{\r\n            name: '',\r\n            address: '',\r\n            pincode: '',\r\n            dob: '',\r\n            aadhaar: '',\r\n            mobile: '',\r\n            username: ''\r\n        },\r\n        validate: validateCustomer,\r\n        onSubmit: (values) => { alert(JSON.stringify(values)) }\r\n    })\r\n\r\n\r\n  return (\r\n    <>\r\n\r\n\r\n\r\n<div className=\"container col-8 mt-5 mb-5\">\r\n                   \r\n             <div className='card text-bg-light p-3 '>\r\n             <form onSubmit={formik.handleSubmit}>\r\n                  <h3 className='text-center'>Customer SignUp Form</h3>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Name</label>\r\n                          <input type=\"text\" \r\n                          placeholder=\"Full Name\" \r\n                          name=\"name\" \r\n                          value={formik.values.name}\r\n                          onSubmit={(e)=>SetName(e.target.value)}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required/>\r\n                          {formik.errors.name?\r\n                          <span className=\"text-danger\">{formik.errors.name}</span>\r\n                          :null}\r\n                      </div>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Address</label>\r\n                          <input type=\"text\" \r\n                          placeholder=\"Address\" \r\n                          name=\"address\" \r\n                          value={formik.values.address}\r\n                          onSubmit={(e)=>SetAddress(e.target.value)}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>\r\n                          {formik.errors.address ? <span className=\"text-danger\">\r\n                        {formik.errors.address}</span> : null}\r\n                      </div>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">PinCode</label>\r\n                          <input type=\"number\" \r\n                          placeholder=\"PinCode\" \r\n                          name=\"pincode\" \r\n                          value={formik.values.pincode}\r\n                          onSubmit={(e)=>SetPincode(e.target.value)}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>{formik.errors.pincode ? <span className=\"text-danger\">\r\n                          {formik.errors.pincode}</span> : null}\r\n                      </div>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Date Of Birth</label>\r\n                          <input type=\"date\" \r\n                          placeholder=\"Enter DOB\" \r\n                          name=\"dob\" \r\n                          value={formik.values.dob}\r\n                          onSubmit={(e)=>SetDob(e.target.value)}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>\r\n                          {formik.errors.dob ? <span className=\"text-danger\">\r\n                          {formik.errors.dob}</span> : null}\r\n                      </div>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Aadhaar Number</label>\r\n                          <input type=\"number\" \r\n                          placeholder=\"Aadhaar No.\" \r\n                          name=\"aadhaar\"\r\n                          value={formik.values.aadhaar}\r\n                          onSubmit={(e)=>SetAadhaar(e.target.value)} \r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>{formik.errors.aadhaar ? <span className=\"text-danger\">\r\n                          {formik.errors.aadhaar}</span> : null}\r\n                      </div>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Mobile No.</label>\r\n                          <input type=\"number\" \r\n                          placeholder=\"Enter Mobile\" \r\n                          name=\"mobile\"\r\n                          value={formik.values.mobile}\r\n                          onSubmit={(e)=>SetMobile(e.target.value)}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>\r\n                          {formik.errors.mobile ? <span className=\"text-danger\">\r\n                          {formik.errors.mobile}</span> : null}\r\n                      </div>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Email</label>\r\n                          <input type=\"Email\" \r\n                          placeholder=\"This will be your Username\" \r\n                          name=\"username\"\r\n                          value={formik.values.username}\r\n                          onSubmit={(e)=>SetUsername(e.target.value)}\r\n                          onChange={formik.handleChange}\r\n                          onBlur={formik.handleBlur}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>\r\n                          <label className=\"small\">OTP will be sent on this email</label><br></br>\r\n                          {formik.errors.username ? <span className=\"text-danger\">\r\n                          {formik.errors.username}</span> : null}\r\n                      </div>\r\n                      {/* <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Password</label>\r\n                          <input type=\"password\" placeholder=\"Enter password\" \r\n                          name=\"password\" \r\n                          value={password}\r\n                          onChange={(e)=>SetPassword(e.target.value)}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>\r\n                      </div>\r\n                      <div className=\"form-group mb-2\">\r\n                          <label className=\"form-label mt-4\">Confirm Password</label>\r\n                          <input type=\"password\" placeholder=\"Confirm password\" \r\n                          name=\"cnfpassword\" \r\n                          value={cnfpassword}\r\n                          onChange={(e)=>SetConfirmPassword(e.target.value)}\r\n                          className=\"form-control rounded-pill mt-2\" \r\n                          required></input>\r\n                      </div> */}\r\n                     <div className='d-grid gap-2'>\r\n                      <button className=\"btn btn-primary mt-4 rounded-pill\" onClick={(e)=>SaveUser(e)}>Get OTP</button>\r\n                      </div>\r\n                  </form>\r\n              \r\n                  <div className='d-grid gap-2'>\r\n                      <button className=\"btn btn-success mt-4 rounded-pill\" >SignIn</button>\r\n                      </div>\r\n         \r\n      </div>\r\n      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import React, { useEffect , useState } from 'react'\r\n// import {  Link, useNavigate } from \"react-router-dom\";\r\n// import Connection from '../components/Services/Connection' \r\n \r\n// const SignIn = () => {\r\n//   let navigate=useNavigate()\r\n//   const [username, SetUsername] = useState('')\r\n//   const [password, SetPassword] = useState('')\r\n \r\n\r\n//   const Login=(e)=>{\r\n//     e.preventDefault();\r\n//     const user={username,password}\r\n//     Connection.getToken(user).then((response)=>{\r\n//       console.log(response.data.role);    \r\n//       console.log(response.data.token);\r\n//       sessionStorage.setItem(\"JwtToken\",response.data.token)  \r\n//     if(response.data.role=='ADMIN')\r\n//     {\r\n//       navigate(\"/adashboard\")\r\n//     }\r\n//     if(response.data.role=='CUSTOMER')\r\n//     {\r\n//       navigate(\"/dashboardc\")\r\n//     }\r\n//     if(response.data.role=='SUPPLIER')\r\n//     {\r\n//       navigate(\"/sdashboard\")\r\n//     }\r\n\r\n            \r\n    \r\n//   } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\r\n \r\n//  const Forgot=(e)=>{\r\n//   e.preventDefault();\r\n//   const user={username,password}\r\n//   //validate that username is provided\r\n//   Connection.forgotPass(user).then((response)=>{\r\n    \r\n//     if(response.data.userid!=0)\r\n//         {\r\n      \r\n//        const tok= response.data.token;\r\n//         navigate('/verify',\r\n//         {\r\n//             state: {\r\n//                 token: tok,\r\n//                  }\r\n//         });  }\r\n\r\n\r\n//   }).catch(error=>{console.log(\"Invalid Username or Password\")})\r\n//  }\r\n\r\n\r\n//   return (\r\n//     <>\r\n\r\n\r\n\r\n// <div className=\"container col-5 mt-5 mb-5\">\r\n          \r\n             \r\n//              <div className='card text-bg-light p-3 '>\r\n//                   <form>\r\n//                   <h3 className='text-center'>SignIn</h3>\r\n//                       <div className=\"form-group mb-2\">\r\n//                           <label className=\"form-label mt-4\">Email</label>\r\n//                           <input type=\"text\" \r\n//                           placeholder=\"Enter Username\" \r\n//                           name=\"username\" \r\n//                           value={username}\r\n//                           onChange={(e)=>SetUsername(e.target.value)}\r\n//                           className=\"form-control rounded-pill mt-2\" \r\n//                           ></input>\r\n//                       </div>\r\n//                       <div className=\"form-group mb-2\">\r\n//                           <label className=\"form-label mt-4\">Password</label>\r\n//                           <input type=\"password\" placeholder=\"Enter password\"\r\n//                            name=\"password\" \r\n//                            value={password}\r\n//                           onChange={(e)=>SetPassword(e.target.value)}\r\n//                           className=\"form-control rounded-pill mt-2\" ></input>\r\n//                       </div>\r\n//                      <div className='d-grid gap-2'>\r\n//                       <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n//                       onClick={(e)=>Login(e)}>Submit</button>\r\n//                       </div>\r\n//                   </form>\r\n              \r\n//               <div className='text-center mt-3'><small><a href='' onClick={(e)=>Forgot(e)}>\r\n//                 Forgot Password</a></small>\r\n//               </div>\r\n         \r\n//       </div>\r\n//       </div>\r\n\r\n\r\n//     </>\r\n//   )\r\n// }\r\n\r\n// export default SignIn\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}