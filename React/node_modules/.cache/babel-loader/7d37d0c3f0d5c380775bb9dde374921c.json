{"ast":null,"code":"var _jsxFileName = \"P:\\\\PROJECT\\\\SpringBoot\\\\React\\\\src\\\\Users\\\\SignIn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useFormik } from 'formik';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst validateCustomer = cdata => {\n  const errors = {};\n  let pattern1 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/;\n  let pattern2 = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/;\n  if (!cdata.username) errors.username = \"Email_Id is required\";else if (!pattern1.test(cdata.username)) errors.username = \"Use Correct Pattern for Email!\";\n  if (!cdata.password) errors.password = \"password is required\";else if (!pattern2.test(cdata.username)) errors.username = \"Use Correct Pattern for password!\";\n  return errors;\n};\n\nconst SignIn = () => {\n  _s();\n\n  useEffect(() => {\n    document.title = \"Wish-it || SignIn\";\n  });\n  const formik = useFormik({\n    initialValues: {\n      username: '',\n      password: ''\n    },\n    validate: validateCustomer,\n    onSubmit: values => {\n      alert(JSON.stringify(values, null, 2));\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container col-5 mt-5 mb-5\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card text-bg-light p-3 \",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: formik.handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            className: \"text-center\",\n            children: \"SignIn\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 30\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 38\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              placeholder: \"Enter Username\",\n              name: \"username\",\n              value: formik.values.username,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 38\n            }, this), formik.errors.username ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.username\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group mb-2\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              className: \"form-label mt-4\",\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"password\",\n              placeholder: \"Enter password\",\n              name: \"password\",\n              value: formik.values.password,\n              onChange: formik.handleChange,\n              onBlur: formik.handleBlur,\n              className: \"form-control rounded-pill mt-2\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 37\n            }, this), formik.errors.password ? /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"text-danger\",\n              children: formik.errors.password\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 37\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 63,\n            columnNumber: 34\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"d-grid gap-2\",\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              className: \"btn btn-primary mt-4 rounded-pill\",\n              type: \"submit\",\n              children: \"Submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 32\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-center mt-3\",\n          children: /*#__PURE__*/_jsxDEV(\"small\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              href: \"\",\n              children: \"Forgot Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 66\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 59\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 2\n    }, this)\n  }, void 0, false);\n}; // import { useFormik } from 'formik';\n// import React, { useEffect , useState } from 'react'\n// import {  Link, useNavigate } from \"react-router-dom\";\n// import Connection from '../components/Services/Connection' \n// const SignIn = () => {\n//   /////////////\n//   useEffect(()=>{\n//     document.title=\"Wish-it || SignIn\"\n//   })\n// ////////////\n//   let navigate=useNavigate()\n//   const [username, SetUsername] = useState('')\n//   const [password, SetPassword] = useState('')\n//   const SaveUser=(e)=>{\n//     e.preventDefault();\n//     const user={username,password}\n//     Connection.getToken(user).then((response)=>{\n//       console.log(response.data.role);    \n//       console.log(response.data.token);\n//       sessionStorage.setItem(\"JwtToken\",response.data.token)  \n//     if(response.data.role=='ADMIN')\n//     {\n//       navigate(\"/adashboard\")\n//     }\n//     if(response.data.role=='CUSTOMER')\n//     {\n//       navigate(\"/cdashboard\")\n//     }\n//     if(response.data.role=='SUPPLIER')\n//     {\n//       navigate(\"/sdashboard\")\n//     }\n//   } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\n//   const formik=useFormik({\n// initialValues:{username:'',password:''},\n// validate:validateCustomer,\n// onSubmit: values => {\n//  console.log(JSON.stringify(values, null, 2));\n// }\n// })\n\n\n_s(SignIn, \"H765J74rD/hTDeNdvwLlHo+iEj4=\", false, function () {\n  return [useFormik];\n});\n\n_c = SignIn;\nexport default SignIn;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["React","useEffect","useState","useFormik","validateCustomer","cdata","errors","pattern1","pattern2","username","test","password","SignIn","document","title","formik","initialValues","validate","onSubmit","values","alert","JSON","stringify","handleSubmit","handleChange","handleBlur"],"sources":["P:/PROJECT/SpringBoot/React/src/Users/SignIn.js"],"sourcesContent":["import React, { useEffect , useState } from 'react'\r\n import { useFormik } from 'formik';\r\n \r\n const validateCustomer=(cdata)=>{\r\nconst errors={}\r\nlet pattern1 = /^[a-z0-9._%]+@[a-z0-9.-]+.[a-z]{3}$/\r\nlet pattern2 = /^[a-zA-Z0-9!@#$%^&*]{6,16}$/\r\nif(!cdata.username)\r\nerrors.username=\"Email_Id is required\"\r\n else if (!pattern1.test(cdata.username))\r\n         errors.username = \"Use Correct Pattern for Email!\"\r\n\r\n\r\n\r\nif(!cdata.password)\r\nerrors.password=\"password is required\"\r\nelse if (!pattern2.test(cdata.username))\r\n        errors.username = \"Use Correct Pattern for password!\"\r\n\r\n\r\nreturn errors\r\n\r\n}\r\n const SignIn = () => {\r\n  useEffect(()=>{\r\n        document.title=\"Wish-it || SignIn\"\r\n      })\r\n\r\n   const formik = useFormik({\r\n     initialValues: {\r\n       username: '',\r\n       password: '',\r\n       \r\n     },\r\n     validate:validateCustomer,\r\n     onSubmit: values => {\r\n       alert(JSON.stringify(values, null, 2));\r\n     },\r\n   });\r\n   return (<>\r\n   \r\n <div className=\"container col-5 mt-5 mb-5\">\r\n          \r\n             \r\n                      <div className='card text-bg-light p-3 '>\r\n                             <form onSubmit={formik.handleSubmit}>\r\n                             <h3 className='text-center'>SignIn</h3>\r\n                                 <div className=\"form-group mb-2\">\r\n                                     <label className=\"form-label mt-4\">Email</label>\r\n                                     <input type=\"text\" \r\n                                    placeholder=\"Enter Username\" \r\n                                    name=\"username\" \r\n                                    value={formik.values.username}\r\n                                    onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    className=\"form-control rounded-pill mt-2\" \r\n                                    ></input>\r\n                                    {formik.errors.username ? \r\n                                    <span className=\"text-danger\">\r\n                                    {formik.errors.username}</span> : null}\r\n          \r\n                                </div>\r\n                                 <div className=\"form-group mb-2\">\r\n                                    <label className=\"form-label mt-4\">Password</label>\r\n                                    <input type=\"password\" placeholder=\"Enter password\"\r\n                                     name=\"password\" \r\n                                     value={formik.values.password}\r\n                                     onChange={formik.handleChange}\r\n                                    onBlur={formik.handleBlur}\r\n                                    className=\"form-control rounded-pill mt-2\" ></input>\r\n                                    {formik.errors.password ? \r\n                                    <span className=\"text-danger\">\r\n                                    {formik.errors.password}</span> : null}\r\n          \r\n                                </div>\r\n                               <div className='d-grid gap-2'>\r\n                                <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n                                type=\"submit\">Submit</button>\r\n                                </div>\r\n                            </form>\r\n                        \r\n                        <div className='text-center mt-3'><small><a href=''>\r\n                          Forgot Password</a></small>\r\n                        </div>\r\n                   \r\n                </div>\r\n                </div>\r\n          \r\n     \r\n     </>\r\n   );\r\n };\r\n\r\n\r\n\r\n// import { useFormik } from 'formik';\r\n// import React, { useEffect , useState } from 'react'\r\n// import {  Link, useNavigate } from \"react-router-dom\";\r\n// import Connection from '../components/Services/Connection' \r\n \r\n\r\n// const SignIn = () => {\r\n//   /////////////\r\n//   useEffect(()=>{\r\n//     document.title=\"Wish-it || SignIn\"\r\n//   })\r\n// ////////////\r\n//   let navigate=useNavigate()\r\n//   const [username, SetUsername] = useState('')\r\n//   const [password, SetPassword] = useState('')\r\n \r\n\r\n//   const SaveUser=(e)=>{\r\n//     e.preventDefault();\r\n//     const user={username,password}\r\n//     Connection.getToken(user).then((response)=>{\r\n//       console.log(response.data.role);    \r\n//       console.log(response.data.token);\r\n//       sessionStorage.setItem(\"JwtToken\",response.data.token)  \r\n//     if(response.data.role=='ADMIN')\r\n//     {\r\n//       navigate(\"/adashboard\")\r\n//     }\r\n//     if(response.data.role=='CUSTOMER')\r\n//     {\r\n//       navigate(\"/cdashboard\")\r\n//     }\r\n//     if(response.data.role=='SUPPLIER')\r\n//     {\r\n//       navigate(\"/sdashboard\")\r\n//     }\r\n\r\n            \r\n    \r\n//   } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\r\n \r\n//   const formik=useFormik({\r\n// initialValues:{username:'',password:''},\r\n// validate:validateCustomer,\r\n// onSubmit: values => {\r\n//  console.log(JSON.stringify(values, null, 2));\r\n// }\r\n// })\r\n\r\n\r\n\r\nexport default SignIn\r\n\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}