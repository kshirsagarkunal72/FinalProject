{"ast":null,"code":"var _jsxFileName = \"P:\\\\PROJECT\\\\SpringBoot\\\\React\\\\src\\\\Users\\\\SignIn.js\";\nimport { Formik, Form, useFormik } from 'formik';\nimport React, { useEffect, useState } from 'react';\nimport { Link, useNavigate } from \"react-router-dom\";\nimport Connection from '../components/Services/Connection';\nimport * as yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst SignIn = props => {\n  const onSubmit = values => {\n    console.log(values);\n    alert(JSON.stringify(values));\n  }; //const formik =useFormik({);\n\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Formik, {\n      children: [\"initialValues=\", {\n        username: \"\",\n        password: \"\"\n      }, formik => {}]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 1\n    }, this)\n  }, void 0, false);\n};\n\n_c = SignIn;\nexport default SignIn;\n{\n  /*\r\n  return (\r\n   <>\r\n  \n  \n  \n  <div className=\"container col-5 mt-5 mb-5\">\r\n         \r\n            \r\n            <div className='card text-bg-light p-3 '>\r\n                 <form>\r\n                 <h3 className='text-center'>SignIn</h3>\r\n                     <div className=\"form-group mb-2\">\r\n                         <label className=\"form-label mt-4\">Email</label>\r\n                         <input type=\"text\" \r\n                         placeholder=\"Enter Username\" \r\n                         name=\"username\" \r\n                         value={formik.values.username}\r\n                        // onChange={(e)=>SetUsername(e.target.value)}\r\n                        onChange={formik.handleChange}\r\n                         className=\"form-control rounded-pill mt-2\" \r\n                         ></input>\r\n                     </div>\r\n                     <div className=\"form-group mb-2\">\r\n                         <label className=\"form-label mt-4\">Password</label>\r\n                         <input type=\"password\" placeholder=\"Enter password\"\r\n                          name=\"password\" \r\n                          value={formik.values.password}\r\n                        // onChange={(e)=>SetPassword(e.target.value)}\r\n                        onChange={formik.handleChange}\r\n                         className=\"form-control rounded-pill mt-2\" ></input>\r\n                     </div>\r\n                    <div className='d-grid gap-2'>\r\n                     <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n                    // onClick={(e)=>Login(e)}\r\n                     \r\n                     type=\"submit\">Submit</button>\r\n                     </div>\r\n                 </form>\r\n             \r\n             <div className='text-center mt-3'><small><a href='' \r\n            // onClick={(e)=>Forgot(e)}\r\n             >\r\n               Forgot Password</a></small>\r\n             </div>\r\n        \r\n     </div>\r\n     </div>\r\n  \n  \n   </>\r\n  )*/\n} //let navigate=useNavigate()\n//const [username, SetUsername] = useState('')\n/// const [password, SetPassword] = useState('')\n// const Login=(e)=>{\n//   e.preventDefault();\n//   const user={username,password}\n//   Connection.getToken(user).then((response)=>{\n//     console.log(response.data.role);    \n//     console.log(response.data.token);\n//     sessionStorage.setItem(\"JwtToken\",response.data.token)  \n//   if(response.data.role=='ADMIN')\n//   {\n//     navigate(\"/adashboard\")\n//   }\n//   if(response.data.role=='CUSTOMER')\n//   {\n//     navigate(\"/dashboardc\")\n//   }\n//   if(response.data.role=='SUPPLIER')\n//   {\n//     navigate(\"/sdashboard\")\n//   }\n// } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\n//  const Forgot=(e)=>{\n//   e.preventDefault();\n//   const user={username,password}\n//   //validate that username is provided\n//   Connection.forgotPass(user).then((response)=>{\n//     if(response.data.userid!=0)\n//         {\n//        const tok= response.data.token;\n//         navigate('/verify',\n//         {\n//             state: {\n//                 token: tok,\n//                  }\n//         });  }\n//   }).catch(error=>{console.log(\"Invalid Username or Password\")})\n//  }\n\nvar _c;\n\n$RefreshReg$(_c, \"SignIn\");","map":{"version":3,"names":["Formik","Form","useFormik","React","useEffect","useState","Link","useNavigate","Connection","yup","SignIn","props","onSubmit","values","console","log","alert","JSON","stringify","username","password","formik"],"sources":["P:/PROJECT/SpringBoot/React/src/Users/SignIn.js"],"sourcesContent":["import {Formik,Form,useFormik} from 'formik';\r\nimport React, { useEffect , useState } from 'react'\r\nimport {  Link, useNavigate } from \"react-router-dom\";\r\nimport Connection from '../components/Services/Connection' \r\n import * as yup from'yup';\r\nconst SignIn = (props) => {\r\n \r\nconst onSubmit=(values)=>{\r\n  console.log(values)\r\nalert(JSON.stringify(values))\r\n}\r\n\r\n//const formik =useFormik({);\r\n\r\nreturn(\r\n  <>\r\n<Formik>\r\ninitialValues={{username:\"\",password:\"\"}\r\n       \r\n\r\n}\r\n\r\n\r\n\r\n{formik=>{\r\n  \r\n\r\n\r\n  \r\n}}\r\n\r\n</Formik>\r\n\r\n  \r\n  \r\n  \r\n  \r\n  </>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n\r\nexport default SignIn\r\n\r\n{/*\r\nreturn (\r\n  <>\r\n\r\n\r\n\r\n<div className=\"container col-5 mt-5 mb-5\">\r\n        \r\n           \r\n           <div className='card text-bg-light p-3 '>\r\n                <form>\r\n                <h3 className='text-center'>SignIn</h3>\r\n                    <div className=\"form-group mb-2\">\r\n                        <label className=\"form-label mt-4\">Email</label>\r\n                        <input type=\"text\" \r\n                        placeholder=\"Enter Username\" \r\n                        name=\"username\" \r\n                        value={formik.values.username}\r\n                       // onChange={(e)=>SetUsername(e.target.value)}\r\n                       onChange={formik.handleChange}\r\n                        className=\"form-control rounded-pill mt-2\" \r\n                        ></input>\r\n                    </div>\r\n                    <div className=\"form-group mb-2\">\r\n                        <label className=\"form-label mt-4\">Password</label>\r\n                        <input type=\"password\" placeholder=\"Enter password\"\r\n                         name=\"password\" \r\n                         value={formik.values.password}\r\n                       // onChange={(e)=>SetPassword(e.target.value)}\r\n                       onChange={formik.handleChange}\r\n                        className=\"form-control rounded-pill mt-2\" ></input>\r\n                    </div>\r\n                   <div className='d-grid gap-2'>\r\n                    <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n                   // onClick={(e)=>Login(e)}\r\n                    \r\n                    type=\"submit\">Submit</button>\r\n                    </div>\r\n                </form>\r\n            \r\n            <div className='text-center mt-3'><small><a href='' \r\n           // onClick={(e)=>Forgot(e)}\r\n            >\r\n              Forgot Password</a></small>\r\n            </div>\r\n       \r\n    </div>\r\n    </div>\r\n\r\n\r\n  </>\r\n)*/}\r\n\r\n\r\n\r\n\r\n //let navigate=useNavigate()\r\n  //const [username, SetUsername] = useState('')\r\n /// const [password, SetPassword] = useState('')\r\n \r\n\r\n  // const Login=(e)=>{\r\n  //   e.preventDefault();\r\n  //   const user={username,password}\r\n  //   Connection.getToken(user).then((response)=>{\r\n  //     console.log(response.data.role);    \r\n  //     console.log(response.data.token);\r\n  //     sessionStorage.setItem(\"JwtToken\",response.data.token)  \r\n  //   if(response.data.role=='ADMIN')\r\n  //   {\r\n  //     navigate(\"/adashboard\")\r\n  //   }\r\n  //   if(response.data.role=='CUSTOMER')\r\n  //   {\r\n  //     navigate(\"/dashboardc\")\r\n  //   }\r\n  //   if(response.data.role=='SUPPLIER')\r\n  //   {\r\n  //     navigate(\"/sdashboard\")\r\n  //   }\r\n\r\n            \r\n    \r\n  // } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\r\n \r\n//  const Forgot=(e)=>{\r\n//   e.preventDefault();\r\n//   const user={username,password}\r\n//   //validate that username is provided\r\n//   Connection.forgotPass(user).then((response)=>{\r\n    \r\n//     if(response.data.userid!=0)\r\n//         {\r\n      \r\n//        const tok= response.data.token;\r\n//         navigate('/verify',\r\n//         {\r\n//             state: {\r\n//                 token: tok,\r\n//                  }\r\n//         });  }\r\n\r\n\r\n//   }).catch(error=>{console.log(\"Invalid Username or Password\")})\r\n//  }\r\n"],"mappings":";AAAA,SAAQA,MAAR,EAAeC,IAAf,EAAoBC,SAApB,QAAoC,QAApC;AACA,OAAOC,KAAP,IAAgBC,SAAhB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,SAAUC,IAAV,EAAgBC,WAAhB,QAAmC,kBAAnC;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACC,OAAO,KAAKC,GAAZ,MAAoB,KAApB;;;;AACD,MAAMC,MAAM,GAAIC,KAAD,IAAW;EAE1B,MAAMC,QAAQ,GAAEC,MAAD,IAAU;IACvBC,OAAO,CAACC,GAAR,CAAYF,MAAZ;IACFG,KAAK,CAACC,IAAI,CAACC,SAAL,CAAeL,MAAf,CAAD,CAAL;EACC,CAHD,CAF0B,CAO1B;;;EAEA,oBACE;IAAA,uBACF,QAAC,MAAD;MAAA,6BACe;QAACM,QAAQ,EAAC,EAAV;QAAaC,QAAQ,EAAC;MAAtB,CADf,EAQCC,MAAM,IAAE,CAKR,CAbD;IAAA;MAAA;MAAA;MAAA;IAAA;EADE,iBADF;AAsCC,CA/CD;;KAAMX,M;AAiDN,eAAeA,MAAf;AAEA;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,C,CAKH;AACC;AACD;AAGC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEF;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA"},"metadata":{},"sourceType":"module"}