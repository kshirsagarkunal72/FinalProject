{"ast":null,"code":"{\n  /*// import {Formik,Form,useFormik} from 'formik';\r\n  import React, { useEffect , useState } from 'react'\r\n  // import {  Link, useNavigate } from \"react-router-dom\";\r\n  // import Connection from '../components/Services/Connection' \r\n  \n  \n  const SignIn = () => {\r\n  \n  const [username, SetUsername] = useState('')\r\n  const [password, SetPassword] = useState('')\r\n  const [formErrors,SetFormErrors]=useState('')\r\n  const [isSubmit,SetIsSubmit]=useState(false)\r\n  const handleSubmit=(e)=>{\r\n   e.preventDefault();\r\n   //SetFormErrors(validate({username,password}))\r\n   SetIsSubmit(true)\r\n  }\r\n  \n  const validate=(values)=>{\r\n   const errors={}\r\n   if(!values.username){\r\n     errors.username=\"Username is Required\";\r\n   }\r\n   if(!values.password)\r\n  {\r\n   errors.password=\"Password is Required\";\r\n  }\r\n  return errors;\r\n  }\r\n  useEffect(()=>{\r\n   if(Object.keys(formErrors).length === 0 && isSubmit ){\r\n     console.log(username+' '+password)\r\n   }\r\n  \n  },[formErrors]);\r\n  \n  \n  \n  \n  \n  \n  return(\r\n   <>\r\n  \n  <div className=\"container col-5 mt-5 mb-5\">\r\n         \r\n            \r\n            <div className='card text-bg-light p-3 '>\r\n                 <form >\r\n                 <h3 className='text-center'>SignIn</h3>\r\n                     <div className=\"form-group mb-2\">\r\n                         <label className=\"form-label mt-4\">Email</label>\r\n                         <input type=\"text\" \r\n                         placeholder=\"Enter Username\" \r\n                         name=\"username\" \r\n                         value={username}\r\n                        onChange={(e)=>SetUsername(e.target.value)}\r\n                      \r\n                         className=\"form-control rounded-pill mt-2\" \r\n                         ></input>\r\n                     </div>\r\n                     <div className=\"form-group mb-2\">\r\n                         <label className=\"form-label mt-4\">Password</label>\r\n                         <input type=\"password\" placeholder=\"Enter password\"\r\n                          name=\"password\" \r\n                          value={password}\r\n                         onChange={(e)=>SetPassword(e.target.value)}\r\n                        \r\n                         className=\"form-control rounded-pill mt-2\" ></input>\r\n                     </div>\r\n                    <div className='d-grid gap-2'>\r\n                     <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n                   onClick={(e)=>handleSubmit(e)}\r\n                     >Submit</button>\r\n                     </div>\r\n                 </form>\r\n             \r\n             <div className='text-center mt-3'><small><a href='' \r\n            // onClick={(e)=>Forgot(e)}\r\n             >\r\n               Forgot Password</a></small>\r\n             </div>\r\n        \r\n     </div>\r\n     </div>\r\n  \n  \n  \n  \n  \n  \n  \n   \r\n   \r\n   \r\n   \r\n   </>\r\n  )\r\n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n  \n   \r\n  }\r\n  \n  export default SignIn*/\n}\n{\n  /*\r\n  return (\r\n   <>\r\n  \n  \n  \n  \n  \n   </>\r\n  )*/\n} //let navigate=useNavigate()\n//const [username, SetUsername] = useState('')\n/// const [password, SetPassword] = useState('')\n// const Login=(e)=>{\n//   e.preventDefault();\n//   const user={username,password}\n//   Connection.getToken(user).then((response)=>{\n//     console.log(response.data.role);    \n//     console.log(response.data.token);\n//     sessionStorage.setItem(\"JwtToken\",response.data.token)  \n//   if(response.data.role=='ADMIN')\n//   {\n//     navigate(\"/adashboard\")\n//   }\n//   if(response.data.role=='CUSTOMER')\n//   {\n//     navigate(\"/dashboardc\")\n//   }\n//   if(response.data.role=='SUPPLIER')\n//   {\n//     navigate(\"/sdashboard\")\n//   }\n// } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\n//  const Forgot=(e)=>{\n//   e.preventDefault();\n//   const user={username,password}\n//   //validate that username is provided\n//   Connection.forgotPass(user).then((response)=>{\n//     if(response.data.userid!=0)\n//         {\n//        const tok= response.data.token;\n//         navigate('/verify',\n//         {\n//             state: {\n//                 token: tok,\n//                  }\n//         });  }\n//   }).catch(error=>{console.log(\"Invalid Username or Password\")})\n//  }","map":{"version":3,"names":[],"sources":["P:/PROJECT/SpringBoot/React/src/Users/SignIn.js"],"sourcesContent":["{/*// import {Formik,Form,useFormik} from 'formik';\r\nimport React, { useEffect , useState } from 'react'\r\n// import {  Link, useNavigate } from \"react-router-dom\";\r\n// import Connection from '../components/Services/Connection' \r\n\r\n\r\nconst SignIn = () => {\r\n\r\nconst [username, SetUsername] = useState('')\r\nconst [password, SetPassword] = useState('')\r\nconst [formErrors,SetFormErrors]=useState('')\r\nconst [isSubmit,SetIsSubmit]=useState(false)\r\nconst handleSubmit=(e)=>{\r\n  e.preventDefault();\r\n  //SetFormErrors(validate({username,password}))\r\n  SetIsSubmit(true)\r\n}\r\n\r\nconst validate=(values)=>{\r\n  const errors={}\r\n  if(!values.username){\r\n    errors.username=\"Username is Required\";\r\n  }\r\n  if(!values.password)\r\n{\r\n  errors.password=\"Password is Required\";\r\n}\r\nreturn errors;\r\n}\r\nuseEffect(()=>{\r\n  if(Object.keys(formErrors).length === 0 && isSubmit ){\r\n    console.log(username+' '+password)\r\n  }\r\n\r\n},[formErrors]);\r\n\r\n\r\n\r\n\r\n\r\n\r\nreturn(\r\n  <>\r\n\r\n<div className=\"container col-5 mt-5 mb-5\">\r\n        \r\n           \r\n           <div className='card text-bg-light p-3 '>\r\n                <form >\r\n                <h3 className='text-center'>SignIn</h3>\r\n                    <div className=\"form-group mb-2\">\r\n                        <label className=\"form-label mt-4\">Email</label>\r\n                        <input type=\"text\" \r\n                        placeholder=\"Enter Username\" \r\n                        name=\"username\" \r\n                        value={username}\r\n                       onChange={(e)=>SetUsername(e.target.value)}\r\n                     \r\n                        className=\"form-control rounded-pill mt-2\" \r\n                        ></input>\r\n                    </div>\r\n                    <div className=\"form-group mb-2\">\r\n                        <label className=\"form-label mt-4\">Password</label>\r\n                        <input type=\"password\" placeholder=\"Enter password\"\r\n                         name=\"password\" \r\n                         value={password}\r\n                        onChange={(e)=>SetPassword(e.target.value)}\r\n                       \r\n                        className=\"form-control rounded-pill mt-2\" ></input>\r\n                    </div>\r\n                   <div className='d-grid gap-2'>\r\n                    <button className=\"btn btn-primary mt-4 rounded-pill\" \r\n                  onClick={(e)=>handleSubmit(e)}\r\n                    >Submit</button>\r\n                    </div>\r\n                </form>\r\n            \r\n            <div className='text-center mt-3'><small><a href='' \r\n           // onClick={(e)=>Forgot(e)}\r\n            >\r\n              Forgot Password</a></small>\r\n            </div>\r\n       \r\n    </div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n  \r\n  \r\n  \r\n  </>\r\n)\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n  \r\n}\r\n\r\nexport default SignIn*/}\r\n\r\n{/*\r\nreturn (\r\n  <>\r\n\r\n\r\n\r\n\r\n\r\n  </>\r\n)*/}\r\n\r\n\r\n\r\n\r\n //let navigate=useNavigate()\r\n  //const [username, SetUsername] = useState('')\r\n /// const [password, SetPassword] = useState('')\r\n \r\n\r\n  // const Login=(e)=>{\r\n  //   e.preventDefault();\r\n  //   const user={username,password}\r\n  //   Connection.getToken(user).then((response)=>{\r\n  //     console.log(response.data.role);    \r\n  //     console.log(response.data.token);\r\n  //     sessionStorage.setItem(\"JwtToken\",response.data.token)  \r\n  //   if(response.data.role=='ADMIN')\r\n  //   {\r\n  //     navigate(\"/adashboard\")\r\n  //   }\r\n  //   if(response.data.role=='CUSTOMER')\r\n  //   {\r\n  //     navigate(\"/dashboardc\")\r\n  //   }\r\n  //   if(response.data.role=='SUPPLIER')\r\n  //   {\r\n  //     navigate(\"/sdashboard\")\r\n  //   }\r\n\r\n            \r\n    \r\n  // } ).catch(error =>{console.log(\"Invalid Username or Password\")})}\r\n \r\n//  const Forgot=(e)=>{\r\n//   e.preventDefault();\r\n//   const user={username,password}\r\n//   //validate that username is provided\r\n//   Connection.forgotPass(user).then((response)=>{\r\n    \r\n//     if(response.data.userid!=0)\r\n//         {\r\n      \r\n//        const tok= response.data.token;\r\n//         navigate('/verify',\r\n//         {\r\n//             state: {\r\n//                 token: tok,\r\n//                  }\r\n//         });  }\r\n\r\n\r\n//   }).catch(error=>{console.log(\"Invalid Username or Password\")})\r\n//  }\r\n"],"mappingswB;AAExB;EAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAI,C,CAKH;AACC;AACD;AAGC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAEF;AACA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA"},"metadata":{},"sourceType":"module"}