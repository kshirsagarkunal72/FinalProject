package com.utility.service;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.http.HttpEntity;
import org.springframework.http.HttpHeaders;
import org.springframework.http.HttpMethod;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Service;
import org.springframework.web.client.RestTemplate;

import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.databind.ObjectMapper;

import com.utility.entity.User;
import com.utility.model.Customer;
import com.utility.repository.UserRepository;


import io.github.resilience4j.retry.annotation.Retry;


@Service
public class UserService {

	@Autowired
	private UserRepository userRepository;
	
	@Autowired
	private RestTemplate restTemplate;
	private static final String SECURITY_SERVICE= "SecurityService";
	public User findByUsername(String username) {
		return userRepository.findByUsername(username);
	}
	@Retry(name = SECURITY_SERVICE,fallbackMethod ="getcFallback" )
	public boolean saveCustomer(Customer  c) {
		HttpHeaders http=new HttpHeaders();
		http.setContentType(MediaType.APPLICATION_JSON);
		String json=null;
		try {
			json=new ObjectMapper().writeValueAsString(c);
		} catch (JsonProcessingException e) {
			throw new RuntimeException(e);
		}
		HttpEntity entity=new HttpEntity(json,http); 
		ResponseEntity o=restTemplate.exchange("http://CUSTOMER-SERVICE/api/customer/savecustomer", HttpMethod.POST, entity, HttpEntity.class);
		if(o.getStatusCodeValue()==200)
			return true;
		else 
			return false;
	}
	public boolean getcFallback(Exception e) {		
		return false;
	}
}
