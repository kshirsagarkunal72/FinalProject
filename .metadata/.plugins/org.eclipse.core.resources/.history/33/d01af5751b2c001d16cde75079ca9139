package com.utility.entity;

import java.util.Calendar;
import java.util.Date;

import javax.persistence.*;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
@NoArgsConstructor
@Data
@Entity
@AllArgsConstructor
public class VerificationToken {
	
//	 private static  final int EXPIRATION_TIME = 10;
	 
	    @Id
	    @GeneratedValue(strategy = GenerationType.IDENTITY)
	    private Long id;

	    private String token;

//	    private Date expirationTime;

	    @OneToOne(fetch = FetchType.EAGER)
	    @JoinColumn(name="user_id",
	    			nullable = false,
	    			foreignKey = @ForeignKey(name="FK_USER_VERIFY_TOKEN"))
	    private User user;

//		public VerificationToken(String token,User user) {
//			super();
//			this.token = token;
//			this.user=user;
//			this.expirationTime=calculateExpirationTime(EXPIRATION_TIME);
//			
//		}
//		
//		public VerificationToken(String token) {
//			super();
//			this.token=token;
//			this.expirationTime=calculateExpirationTime(EXPIRATION_TIME);
//		}
//		private Date calculateExpirationTime(int expirationTime2) {
//			Calendar calendar= Calendar.getInstance();
//			calendar.setTimeInMillis(new Date().getTime());
//			calendar.add(Calendar.MINUTE, expirationTime2);
//			return new Date(calendar.getTime().getTime());
//		}
	    
	   
}
